scale_x_continuous(breaks = c(2, 4, 6, 8,10,12))
# Points against vs weekly average vs. opponents score
# making new dataframe
weekly_data = data|>
# group by teamname and week
group_by(TeamName, Week)|>
# get rid of bench players
filter(PlayerRosterSlot != "Bench")|>
# get projected and weekly score for each team
summarize(weekly_score = sum(PlayerScoreActual),
projected_weekly_score = sum(PlayerScoreProjected))
# get points against using an inner join between weekly data and matchups data
# this is so I know who is playing who each week
pts_against = inner_join(weekly_data, matchups, by = c("Week")) |>
# had to only keep rows with the teamname of the week looked at
filter(TeamName == Name1 | TeamName == Name2)
# add a column that is your opponent for that week
pts_against$opponent = ifelse(pts_against$TeamName == pts_against$Name1, pts_against$Name2,pts_against$Name1)
# get the opponents score for that week
pts_against$opponent_score = ifelse(pts_against$TeamName == pts_against$Name1, pts_against$Score2,pts_against$Score1)
# redfine dataframe
pts_against = pts_against |>
# select only handful of columns now that are needed for plot
select(TeamName, Week, weekly_score, projected_weekly_score, opponent, opponent_score) |>
# group by week
group_by(Week) |>
# get mean weekly average to plot as well
mutate(weekly_average = mean(weekly_score))
# init plot
ggplot(pts_against, aes(x = Week, color = TeamName)) +
# geom line for opponent score
geom_line(aes(y = opponent_score, linetype = "dashed"), color= "gray") +
# geom line for weekly average score
geom_line(aes(y = weekly_average, linetype = "dotted"), color= "black") +
# geom line for your score
geom_line(aes(y = weekly_score, linetype = "solid")) +
# wrap by team
facet_wrap(.~ TeamName) +
# set labs
labs(
title = "Weekly Average Score Compared to You and Your Opponent's Score",
x = "Week",
y = "Scores",
caption = "Data Source: ESPN Fantasy Website",
subtitle = str_wrap("There is a diverse range of teams, including consistent ones, teams with a lot of boom
potential, and teams with a lot of bust potential. Notable outliers are Team GM, who
frequently scores high, and Team TP, who frequently scores low. Generally, teams tend to
score close to the average points per week, with a few teams deviating from this trend each
week.", width = 90)) +
# set custom labels for linetype
scale_linetype_manual(values = c("dashed", "dotted", "solid"), labels = c("Opponents Score", "Weekly Average", "Your Score")) +
# set colors for teamnames
scale_colour_manual(values = paletteer_d("ggprism::colors", 12)) +
# get only legend for linetype
guides(color = "none", linetype = guide_legend(title = "Scores")) +
# theme classe
theme_classic() +
# edit text and legend position
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(face= "bold", hjust = 0.5),
legend.position = c(.98, -.09), legend.justification = c(1, 0)) +
scale_x_continuous(breaks = c(2, 4, 6, 8, 10,12))
# init plot
ggplot(pts_against, aes(x = Week, color = TeamName)) +
# geom line for opponent score
geom_line(aes(y = opponent_score, linetype = "dashed"), color= "gray") +
# geom line for weekly average score
geom_line(aes(y = weekly_average, linetype = "dotted"), color= "black") +
# geom line for your score
geom_line(aes(y = weekly_score, linetype = "solid")) +
# wrap by team
facet_wrap(.~ TeamName) +
# set labs
labs(
title = "Weekly Average Score Compared to You and Your Opponent's Score",
x = "Week",
y = "Scores",
caption = "Data Source: ESPN Fantasy Website",
subtitle = str_wrap("There is a diverse range of teams, including consistent ones, teams with a lot of boom
potential, and teams with a lot of bust potential. Notable outliers are Team GM, who
frequently scores high, and Team TP, who frequently scores low. Generally, teams tend to
score close to the average points per week, with a few teams deviating from this trend each
week.", width = 90)) +
# set custom labels for linetype
scale_linetype_manual(values = c("dashed", "dotted", "solid"), labels = c("Opponents Score", "Weekly Average", "Your Score")) +
# set colors for teamnames
scale_colour_manual(values = paletteer_d("ggprism::colors", 12)) +
# get only legend for linetype
guides(color = "none", linetype = guide_legend(title = "Scores")) +
# theme classe
theme_classic() +
# edit text and legend position
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(face= "bold", hjust = 0.5),
legend.position = c(.95, -.09), legend.justification = c(1, 0)) +
scale_x_continuous(breaks = c(2, 4, 6, 8, 10,12))
# init plot
ggplot(pts_against, aes(x = Week, color = TeamName)) +
# geom line for opponent score
geom_line(aes(y = opponent_score, linetype = "dashed"), color= "gray") +
# geom line for weekly average score
geom_line(aes(y = weekly_average, linetype = "dotted"), color= "black") +
# geom line for your score
geom_line(aes(y = weekly_score, linetype = "solid")) +
# wrap by team
facet_wrap(.~ TeamName) +
# set labs
labs(
title = "Weekly Average Score Compared to You and Your Opponent's Score",
x = "Week",
y = "Scores",
caption = "Data Source: ESPN Fantasy Website",
subtitle = str_wrap("There is a diverse range of teams, including consistent ones, teams with a lot of boom
potential, and teams with a lot of bust potential. Notable outliers are Team GM, who
frequently scores high, and Team TP, who frequently scores low. Generally, teams tend to
score close to the average points per week, with a few teams deviating from this trend each
week.", width = 90)) +
# set custom labels for linetype
scale_linetype_manual(values = c("dashed", "dotted", "solid"), labels = c("Opponents Score", "Weekly Average", "Your Score")) +
# set colors for teamnames
scale_colour_manual(values = paletteer_d("ggprism::colors", 12)) +
# get only legend for linetype
guides(color = "none", linetype = guide_legend(title = "Scores")) +
# theme classe
theme_classic() +
# edit text and legend position
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(face= "bold", hjust = 0.5),
legend.position = c(.9, -.09), legend.justification = c(1, 0)) +
scale_x_continuous(breaks = c(2, 4, 6, 8, 10,12))
# init plot
ggplot(pts_against, aes(x = Week, color = TeamName)) +
# geom line for opponent score
geom_line(aes(y = opponent_score, linetype = "dashed"), color= "gray") +
# geom line for weekly average score
geom_line(aes(y = weekly_average, linetype = "dotted"), color= "black") +
# geom line for your score
geom_line(aes(y = weekly_score, linetype = "solid")) +
# wrap by team
facet_wrap(.~ TeamName) +
# set labs
labs(
title = "Weekly Average Score Compared to You and Your Opponent's Score",
x = "Week",
y = "Scores",
caption = "Data Source: ESPN Fantasy Website",
subtitle = str_wrap("There is a diverse range of teams, including consistent ones, teams with a lot of boom
potential, and teams with a lot of bust potential. Notable outliers are Team GM, who
frequently scores high, and Team TP, who frequently scores low. Generally, teams tend to
score close to the average points per week, with a few teams deviating from this trend each
week.", width = 90)) +
# set custom labels for linetype
scale_linetype_manual(values = c("dashed", "dotted", "solid"), labels = c("Opponents Score", "Weekly Average", "Your Score")) +
# set colors for teamnames
scale_colour_manual(values = paletteer_d("ggprism::colors", 12)) +
# get only legend for linetype
guides(color = "none", linetype = guide_legend(title = "Scores")) +
# theme classe
theme_classic() +
# edit text and legend position
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(face= "bold", hjust = 0.5),
legend.position = c(.98, -.15), legend.justification = c(1, 0)) +
scale_x_continuous(breaks = c(2, 4, 6, 8, 10,12))
# init plot
ggplot(pts_against, aes(x = Week, color = TeamName)) +
# geom line for opponent score
geom_line(aes(y = opponent_score, linetype = "dashed"), color= "gray") +
# geom line for weekly average score
geom_line(aes(y = weekly_average, linetype = "dotted"), color= "black") +
# geom line for your score
geom_line(aes(y = weekly_score, linetype = "solid")) +
# wrap by team
facet_wrap(.~ TeamName) +
# set labs
labs(
title = "Weekly Average Score Compared to You and Your Opponent's Score",
x = "Week",
y = "Scores",
caption = "Data Source: ESPN Fantasy Website",
subtitle = str_wrap("There is a diverse range of teams, including consistent ones, teams with a lot of boom
potential, and teams with a lot of bust potential. Notable outliers are Team GM, who
frequently scores high, and Team TP, who frequently scores low. Generally, teams tend to
score close to the average points per week, with a few teams deviating from this trend each
week.", width = 90)) +
# set custom labels for linetype
scale_linetype_manual(values = c("dashed", "dotted", "solid"), labels = c("Opponents Score", "Weekly Average", "Your Score")) +
# set colors for teamnames
scale_colour_manual(values = paletteer_d("ggprism::colors", 12)) +
# get only legend for linetype
guides(color = "none", linetype = guide_legend(title = "Scores")) +
# theme classe
theme_classic() +
# edit text and legend position
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(face= "bold", hjust = 0.5),
legend.position = c(.98, -.2), legend.justification = c(1, 0)) +
scale_x_continuous(breaks = c(2, 4, 6, 8, 10,12))
# init plot
ggplot(pts_against, aes(x = Week, color = TeamName)) +
# geom line for opponent score
geom_line(aes(y = opponent_score, linetype = "dashed"), color= "gray") +
# geom line for weekly average score
geom_line(aes(y = weekly_average, linetype = "dotted"), color= "black") +
# geom line for your score
geom_line(aes(y = weekly_score, linetype = "solid")) +
# wrap by team
facet_wrap(.~ TeamName) +
# set labs
labs(
title = "Weekly Average Score Compared to You and Your Opponent's Score",
x = "Week",
y = "Scores",
caption = "Data Source: ESPN Fantasy Website",
subtitle = str_wrap("There is a diverse range of teams, including consistent ones, teams with a lot of boom
potential, and teams with a lot of bust potential. Notable outliers are Team GM, who
frequently scores high, and Team TP, who frequently scores low. Generally, teams tend to
score close to the average points per week, with a few teams deviating from this trend each
week.", width = 90)) +
# set custom labels for linetype
scale_linetype_manual(values = c("dashed", "dotted", "solid"), labels = c("Opponents Score", "Weekly Average", "Your Score")) +
# set colors for teamnames
scale_colour_manual(values = paletteer_d("ggprism::colors", 12)) +
# get only legend for linetype
guides(color = "none", linetype = guide_legend(title = "Scores")) +
# theme classe
theme_classic() +
# edit text and legend position
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(face= "bold", hjust = 0.5),
legend.position = c(.98, -.18), legend.justification = c(1, 0)) +
scale_x_continuous(breaks = c(2, 4, 6, 8, 10,12))
# init plot
ggplot(pts_against, aes(x = Week, color = TeamName)) +
# geom line for opponent score
geom_line(aes(y = opponent_score, linetype = "dashed"), color= "gray") +
# geom line for weekly average score
geom_line(aes(y = weekly_average, linetype = "dotted"), color= "black") +
# geom line for your score
geom_line(aes(y = weekly_score, linetype = "solid")) +
# wrap by team
facet_wrap(.~ TeamName) +
# set labs
labs(
title = "Weekly Average Score Compared to You and Your Opponent's Score",
x = "Week",
y = "Scores",
caption = "Data Source: ESPN Fantasy Website",
subtitle = str_wrap("There is a diverse range of teams, including consistent ones, teams with a lot of boom
potential, and teams with a lot of bust potential. Notable outliers are Team GM, who
frequently scores high, and Team TP, who frequently scores low. Generally, teams tend to
score close to the average points per week, with a few teams deviating from this trend each
week.", width = 90)) +
# set custom labels for linetype
scale_linetype_manual(values = c("dashed", "dotted", "solid"), labels = c("Opponents Score", "Weekly Average", "Your Score")) +
# set colors for teamnames
scale_colour_manual(values = paletteer_d("ggprism::colors", 12)) +
# get only legend for linetype
guides(color = "none", linetype = guide_legend(title = "Scores")) +
# theme classe
theme_classic() +
# edit text and legend position
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(face= "bold", hjust = 0.5),
legend.position = c(.98, -.16), legend.justification = c(1, 0)) +
scale_x_continuous(breaks = c(2, 4, 6, 8, 10,12))
# Cumulative points over time and show distribution of each place
# Define the desired order of the positions
position_order <- c("K", "D/ST","TE", "FLEX","WR","RB", "QB")
# get data
data |>
# group by teamname and week
group_by(TeamName, PlayerRosterSlot) |>
# filter IR players out
filter(PlayerRosterSlot != "IR") |>
# gilter bench players out
filter(PlayerRosterSlot != "Bench") |>
# get sum of weekly score
summarise(total_score_per_position = sum(PlayerScoreActual))  |>
# factor rosterslot
mutate(PlayerRosterSlot = factor(PlayerRosterSlot, levels = position_order)) |>
# plot in ggplot
ggplot(aes(x = TeamName, y = total_score_per_position, fill = PlayerRosterSlot)) +
# geom bar of all positions
geom_bar(position="dodge", stat="identity") +
# change colors and add percent to y axis
# scale_colour_manual(values = paletteer_d("ggprism::colors", 12)) +
# labels
labs(
x = "Team Name",
y = "Total Scores (Through Week 12)",
fill = "Positions",
title = "Total Score of Each Position For All Teams",
caption = "Data Source: ESPN Fantasy Website",
subtitle = str_wrap("Wide receivers (WR) and running backs (RB) consistently dominate in point scoring for each
team, with the quarterback (QB) following closely behind. The FLEX position seems variable
among teams which makes sense as it allows any positional player to be utilized, which is why
most people have either an RB or WR in that spot. Notably, positions such as kicker (K),
defense/special teams (D/ST), and tight end (TE) exhibit relatively consistent performance
across all teams.", width = 87)) +
# change theme to linedraw
theme_linedraw() +
# edit text
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text = element_text(size = 12),
plot.title = element_text(face = "bold", hjust = 0.5)) +
# add colors to each position
scale_fill_manual(values = paletteer_d("NatParksPalettes::GrandCanyon", 7))
# boxplot of scores for my team
data |>
# remove players
filter(!PlayerRosterSlot %in% c("Bench", "IR")) |>
# groupby team
group_by(TeamName) |>
# init plot
ggplot(aes(x = TeamName, y = PlayerScoreActual, fill = TeamName)) +
# geom violin
geom_violin() +
geom_boxplot(width=.1, color="white",outlier.shape = NA) +
# add colors
scale_fill_manual(values = paletteer_d("ggprism::colors", 12)) +
# change to linedraw
theme_linedraw() +
# add theme
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text = element_text(size = 12),
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11)) +
# add labels
labs(
x = "Team Name",
y = "Player's Scores (All Weeks)",
title = "Distribution of Player Scores for Each Team (Through Week 9)",
fill = "Team Name",
caption = "Data Source: ESPN Fantasy Website",
subtitle = str_wrap("The violin plots display the distribution of all player scores for each team. The boxplots
within expresses the median, interquartile range, and estimated min/max based on the interquartile range.
Notably, Team DH and Team RW have had the best weeks by a player so far this season, while Team WR has had the
worst scores. Most teams exhibit a similar median score, however, Team GM stands out with a noticeably higher
median comparatively.", width = 90)) +
# get rid of legend
guides(fill = "none", color = "none")
# graph for worst loss differential
# grab difference of scores
matchups_diff = matchups |>
# find difference of scores
mutate(Difference = Score1 - Score2)
# get team with lower score
matchups_diff$LowerScoreName = ifelse(matchups_diff$Difference < 0, matchups_diff$Name1, matchups_diff$Name2)
# get abs of difference and plot
matchups_diff |>
# absolute the difference
mutate(Difference = abs(Difference)) |>
# group by team
group_by(LowerScoreName) |>
# get sum of differences for each team
summarise(sum_diff = sum(Difference)) |>
# init plot
ggplot(aes(x = LowerScoreName, y = sum_diff, fill = LowerScoreName)) +
# geom bar for each team
geom_col(position = "dodge") +
# add colors
scale_fill_manual(values = paletteer_d("ggprism::colors", 12)) +
# change to linedraw
theme_linedraw() +
# add theme
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text = element_text(size = 12),
plot.title = element_text(face = "bold", hjust = 0.5)) +
# add labels
labs(
x = "Team Name",
y = "Total Loss Differential",
title = "Total Loss Differential For Each Team (Through Week 12)",
fill = "Team Name",
caption = "Data Source: ESPN Fantasy Website",
subtitle = str_wrap("It appears that there are four distinct tiers of total loss differential observed thus far in the
season. Noteworthy outliers include Team BD, whose minimal loss differential suggests consistent
performance despite losing games, and Team TP, who consistently experiences significant deficits
in each loss they have.", width = 85)) +
# get rid of legend
guides(fill = "none")
# graph for worst loss differential
# grab difference of scores
matchups_diff = matchups |>
# find difference of scores
mutate(Difference = Score1 - Score2)
# get team with lower score
matchups_diff$LowerScoreName = ifelse(matchups_diff$Difference < 0, matchups_diff$Name1, matchups_diff$Name2)
# get abs of difference and plot
matchups_diff |>
# absolute the difference
mutate(Difference = abs(Difference)) |>
# group by team
group_by(LowerScoreName) |>
# get sum of differences for each team
summarise(sum_diff = sum(Difference)) |>
# init plot
ggplot(aes(x = LowerScoreName, y = sum_diff, fill = LowerScoreName)) +
# geom bar for each team
geom_col(position = "dodge") +
# add colors
scale_fill_manual(values = paletteer_d("ggprism::colors", 12)) +
# change to linedraw
theme_linedraw() +
# add theme
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text = element_text(size = 12),
plot.title = element_text(face = "bold", hjust = 0.5)) +
# add labels
labs(
x = "Team Name",
y = "Total Loss Differential",
title = "Total Loss Differential For Each Team (Through Week 13)",
fill = "Team Name",
caption = "Data Source: ESPN Fantasy Website",
subtitle = str_wrap("It appears that there are four distinct tiers of total loss differential observed thus far in the
season. Noteworthy outliers include Team BD, whose minimal loss differential suggests consistent
performance despite losing games, and Team TP, who consistently experiences significant deficits
in each loss they have.", width = 85)) +
# get rid of legend
guides(fill = "none")
# Read in my package ahead of time
library(tidyverse)
library(here)
library(ggplot2)
library(paletteer)
library(stringr)
# read in data
data = read_csv("data/league_data_2023_deidentified.csv")
# read in matchup data
matchups = read_csv("data/league_matchups_2023_deidentified.csv")
# get rid of some of the data as it duplicated it
matchups = matchups[1:65,]
# NOTE: edit WEEK based on current week
data = data |>
# get rid of weeks 9-17
filter(!Week %in% c(14:17)) |>
# drop playerfantasyteam
select(-PlayerFantasyTeam)
matchups = matchups |>
# get rid of weeks 9-17
filter(!Week %in% c(14:17))
data
unique(data$Week)
data |>
data
matchups
data |>
# remove players
filter(!PlayerRosterSlot %in% c("Bench", "IR")) |>
# groupby team
group_by(TeamName)
data |>
# remove players
filter(!PlayerRosterSlot %in% c("Bench", "IR")) |>
# groupby team
filter(TeamName == "Team DH")
matchups
matchups |>
filter(Name1 == "Team DH")
dh1 = matchups |>
filter(Name1 == "Team DH")
dh2 = matchups |>
filter(Name2 == "Team DH")
dh2
dh1
dh1$Score1 + dh2$Score2
dh1$Score1
dh2$Score2
sum(dh1$Score1)
sum(dh1$Score1) + sum(dh2$Score2)
sum(dh2$Score2)
sum(dh1$Score1) + sum(dh2$Score2)
data |>
filter(TeamName = "Team DH")
data
data |>
filter(TeamName == "Team DH")
data |>
filter(PlayerName %in% c("Lamar Jackson","Christian McCaffrey", "Josh Jacobs", "Jaylen Waddle", "Michael Pittman Jr.", "D'Andre Swift", "George Kittle", "Patriots D/ST", "Younghoe Koo"))
data |>
filter(PlayerName %in% c("Lamar Jackson","Christian McCaffrey", "Josh Jacobs", "Jaylen Waddle", "Michael Pittman Jr.", "D'Andre Swift", "George Kittle", "Patriots D/ST", "Younghoe Koo")) |>
sum(PlayerScoreActual)
data |>
filter(PlayerName %in% c("Lamar Jackson","Christian McCaffrey", "Josh Jacobs", "Jaylen Waddle", "Michael Pittman Jr.", "D'Andre Swift", "George Kittle", "Patriots D/ST", "Younghoe Koo"))
data |>
filter(PlayerName %in% c("Lamar Jackson","Christian McCaffrey", "Josh Jacobs", "Jaylen Waddle", "Michael Pittman Jr.", "D'Andre Swift", "George Kittle", "Patriots D/ST", "Younghoe Koo")) |>
summarize(summ = sum(PlayerScoreActual))
sum(dh1$Score1) + sum(dh2$Score2)
data |>
group_by(TeamName, Week) |>
filter(PlayerRosterSlot != "Bench") |>
summarize(weekly_score = sum(PlayerScoreActual)) |>
ggplot(aes(x=Week, y = weekly_score, color = TeamName)) +
geom_line(size=1) +
xlim(1,8)  +
ylim(50,180) +
# change colors and add percent to y axis
scale_colour_manual(values = paletteer_d("ggprism::colors", 12)) +
labs(
x = "Week",
y = "Weekly Score",
color = "Team",
title = "Weekly Score for Every Team")
