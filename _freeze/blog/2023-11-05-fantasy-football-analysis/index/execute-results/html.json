{
  "hash": "1e1469ad9857a1e5af6bbbacd6ab763f",
  "result": {
    "markdown": "---\ntitle: \"An Analysis on my 2023 Fantasy Football League (So Far)\"\nauthor: \"Caleb Hallinan\"\ndate: 11/05/2023\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Code\"\n    code-tools: true\n    embed-resources: true\nfontsize: 12pt\ngeometry: margin=1.5in\nfontcolor: white\nbibliography: references.bib\ncsl: ieee.csl\nimage: fantasy_football.webp\ncategories: [project]\n---\n\n\n<!-- Global params -->\n\n\n\n\n\n## Brief Introduction\n\nMy friends and I are [always]{.underline} talking about fantasy football. You may read that and think I'm kidding, but if you look at my phone screen time since football season started the top two are 1. The ESPN Fantasy App and 2. The IPhone Messages App because I am messaging my friends about fantasy. So no, I am not kidding. It's probably not worth it because I won't win this year anyways, but eh - it's fun and I enjoy it :)\n\n<!-- football image -->\n\n::: {style=\"text-align: center;\"}\n![[ESPN Fantasy App Logo](https://espnpressroom.com/us/press-releases/2016/08/espn-fantasy-footballs-21st-season-comprehensive-coverage-ever/)](fantasy_football.webp){width=\"400\"}\n:::\n\n::: callout-important\nFantasy Football can and will likely become addicting if you play, so fair warning to those who have never played before and are interested ðŸ˜…\n:::\n\n<!-- Read in Packages -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in my package ahead of time\nlibrary(tidyverse)\nlibrary(here)\nlibrary(ggplot2)\nlibrary(paletteer)\nlibrary(stringr)\n```\n:::\n\n\n## The Questions and Data\n\nWith this being said, I wanted to do a more in depth analysis of some fantasy football statistics so far this year. I did some research and found two awesome blog posts that helped get me started on reading in data and interesting graphs to make @jman4190medium @stimsonspage. The goal was to answer questions like:\n\n1.  How accurate are your weekly projections?\n2.  What teams are under or over performing each week compared to others?\n3.  Where do most of the points come from for each team?\n\nMy hope is to add more to this analysis as time goes on, so let me know if you have a question you are interested in!\n\nI have two main audiences I want this to reach:\n\n1.  My fantasy football friends\n2.  Others who do fantasy football and might find my analysis interesting\n\nFor those of you who may not understand fantasy football, I won't go into much depth on it so check out this [short post by ESPN](https://www.espn.com/fantasy/football/story/_/id/34389554/fantasy-football-beginners-how-play-fantasy-football-2022) that explains it @espn-fantasy-football-2022.\n\nSo for the data, I decided to use my football fantasy league of this year (2023). I could have done last year for a more complete analysis of how I didn't win, but this give my league things to talk about now and I can continually update the analysis each week (which seemed pretty cool to me). It turns out I am not the first person that wanted this data, so lucky for me a guy named Tim Bryan made a function to extract all the data from the website @espnfantasyfootballgithub. Click [here](https://github.com/tbryan2/espnfantasyfootball) to go to the specific repository I used from him.\n\nHowever, not everything worked the first try and I had to make some changes to his code to load in all the data without some errors. Feel free to check [my github repo](https://github.com/calebhallinan/fantasy_football_2023) for what I did as well as the data used. So, after some tweeks I was successfully able to read in and save everything I needed to a .csv file in my local directory which I then pushed to my github. Here is a data dictionary for the variables I was using with two different datasets:\n\n::: {style=\"font-size: 80%;\"}\n| Variable Name        | Data Type |                                               Description |         Example          |\n|--------------------|:-----------------|-----------------:|:----------------:|\n| Week                 | dbl       |                       Week for each football games played | There are 17 Weeks total |\n| PlayerName           | chr       |                                   Name of football player |        Joe Burrow        |\n| PlayerScoreActual    | dbl       |         The actual points a player scored in a given week |           21.2           |\n| PlayerScoreProjected | dbl       | The projected points a player is to score in a given week |           19.0           |\n| PlayerRosterSlot     | chr       |      What position that player is playing in a given week |            WR            |\n| TeamName             | chr       |                           The team who has a given player |     Team Caleb (me!)     |\n\n: Data Dictionary for Scoring Variables\n\n| Variable Name | Data Type |                                   Description |         Example          |\n|--------------------|:-----------------|-----------------:|:----------------:|\n| Week          | dbl       |           Week for each football games played | There are 17 Weeks total |\n| Name1         | chr       |                                Name of team 1 |     Team Caleb (me!)     |\n| Score1        | dbl       | The total points Name1 scored in a given week |          102.7           |\n| Name2         | chr       |                                Name of team 2 |         Team BL          |\n| Score2        | dbl       | The total points Name2 scored in a given week |          121.3           |\n| Type          | factor    |                Regular season or Playoff game |         Regular          |\n\n: Data Dictionary for Weekly Match-up Variables\n:::\n\n::: callout-note\nHere is also a brief dictionary for common abbreviations you will see throughout this blog and in fantasy football:\n\nK = Kicker\n\nD/ST = Defense and Special Teams\n\nTE = Tight End\n\nWR = Wide Receiver\n\nRB = Running Back\n\nQB = Quarterback\n\nFLEX = Can be any position listed above\n:::\n\nFinally, I de-identified all the data but mine to where my friends would know who they are but no one else can identify them. This data is coming from the ESPN Fantasy Website so thank you to them for allowing me to extract it @espnfantasyfootball!\n\nSo now, let's go ahead and read in the data I obtained using python (on my github). I do some pre-processing to remove weeks that haven't been played yet and other columns I don't need.\n\n<!-- Read in data -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in data\ndata = read_csv(\"data/league_data_2023_deidentified.csv\")\n\n# read in matchup data\nmatchups = read_csv(\"data/league_matchups_2023_deidentified.csv\")\n# get rid of some of the data as it duplicated it\nmatchups = matchups[1:65,]\n\n# NOTE: edit WEEK based on current week\ndata = data |> \n  # get rid of weeks 9-17\n  filter(!Week %in% c(14:17)) |> \n  # drop playerfantasyteam\n  select(-PlayerFantasyTeam)\n\nmatchups = matchups |> \n  # get rid of weeks 9-17\n  filter(!Week %in% c(14:17))\n```\n:::\n\n\n## The Analysis\n\nThe first question I wanted to look at was one I was interested coming into this analysis. How accurate are your weekly projections? To me, it seems like they never are haha - I could be projected super high one week and then score 20 points below or vice versa any given week. So let's look at the plot below:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# plot showing weekly projections to actual score\n# data\ndata|>\n  # groupby team name and week\n  group_by(TeamName, Week)|>\n  # get rid of bench players as they don't count towards score\n  filter(PlayerRosterSlot != \"Bench\")|>\n  # get the sum of your actual player roster and projected \n  summarize(weekly_score = sum(PlayerScoreActual),\n            projected_weekly_score = sum(PlayerScoreProjected))|>\n  # begin plotting\n  ggplot(aes(x = Week, y = weekly_score, color = TeamName)) +\n  # add solid line for actual total\n  geom_line(aes(linetype = \"solid\", show.legend = FALSE)) +\n  # dashed line for projected total\n  geom_line(aes(y = projected_weekly_score, linetype = \"dashed\")) +\n  # add point to easily see week\n  geom_point(aes(y=weekly_score), size=1) +\n  # average projected\n  # geom_hline(aes(yintercept=mean(projected_weekly_score), linetype = \"dotted\", color=\"red\")) +\n  # facet wrap by teamname\n  facet_wrap(~ TeamName) +\n  # add labels\n  labs(\n    title = \"Weekly Actual and Projected Scores by Team\", \n    x = \"Week\", \n    y = \"Scores\",\n    caption = \"Data Source: ESPN Fantasy Website\",\n    subtitle = str_wrap(\"The plot reveals several interesting trends. Notably, Team BD and Team JN consistently maintain \n                        a steady average of projected points per week. Meanwhile, teams such as myself and Team BL have\n                        experienced a mix of both impressive and lackluster weeks. On the other hand, Team GM has had an\n                        incredible season so far, consistently delivering outstanding performances week after week.\n                        Lastly, a few teams like Team RW and Team TP have notably underperformed in multiple weeks.\",\n                        width = 87)) +\n  # add manual labels\n  scale_linetype_manual(values = c(\"dashed\", \"solid\"), labels = c(\"Projected\", \"Actual\")) +\n  # set y limit\n  ylim(50, 180) +\n  # set colors for teams\n  scale_colour_manual(values = paletteer_d(\"ggprism::colors\", 12)) +\n  # get rid of color legend but use linetype legend\n  guides(color = \"none\", linetype = guide_legend(title = \"Scores\")) +\n  # use classic theme\n  theme_classic() +\n  # edit text and legend\n  theme(axis.text.x = element_text(size = 12),\n  axis.text.y = element_text(size = 12),\n  plot.title = element_text(face= \"bold\", hjust = 0.5),\n  legend.position = c(.98, -0.12), legend.justification = c(1, 0)) +\n  scale_x_continuous(breaks = c(2, 4, 6, 8,10,12))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nWell, I think I was right in thinking they aren't ideal but honestly a couple teams seem to follow it fairly well. Team BD is pretty consistent across the board so far, as with Team JN. However, there are some teams with large outlier weeks like Team GM who has had some insane weeks or Team TP who has had some not so great weeks. Overall, it is pretty interesting to see the actual points scored that week compared to the projected!\n\nThe next graph is probably my favorite for various reasons and was suggested by one of my friends in this league. What we wanted to look at was how your opponents score that week compared to the weekly average score, or in other words how much your opponent \"went off\" or \"did horribly\" compared to others. I then decided to go one step further to plot your score for that week as well, and you can see some really interesting and funny trends in this plot below.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Points against vs weekly average vs. opponents score\n# making new dataframe\nweekly_data = data|>\n  # group by teamname and week\n  group_by(TeamName, Week)|>\n  # get rid of bench players\n  filter(PlayerRosterSlot != \"Bench\")|>\n  # get projected and weekly score for each team\n  summarize(weekly_score = sum(PlayerScoreActual),\n            projected_weekly_score = sum(PlayerScoreProjected)) \n\n# get points against using an inner join between weekly data and matchups data\n# this is so I know who is playing who each week\npts_against = inner_join(weekly_data, matchups, by = c(\"Week\")) |> \n  # had to only keep rows with the teamname of the week looked at\n  filter(TeamName == Name1 | TeamName == Name2)\n\n# add a column that is your opponent for that week\npts_against$opponent = ifelse(pts_against$TeamName == pts_against$Name1, pts_against$Name2,pts_against$Name1)\n# get the opponents score for that week\npts_against$opponent_score = ifelse(pts_against$TeamName == pts_against$Name1, pts_against$Score2,pts_against$Score1)\n\n# redfine dataframe\npts_against = pts_against |> \n  # select only handful of columns now that are needed for plot\n  select(TeamName, Week, weekly_score, projected_weekly_score, opponent, opponent_score) |> \n  # group by week\n  group_by(Week) |> \n  # get mean weekly average to plot as well\n  mutate(weekly_average = mean(weekly_score))\n\n# init plot\nggplot(pts_against, aes(x = Week, color = TeamName)) +\n  # geom line for opponent score\n  geom_line(aes(y = opponent_score, linetype = \"dashed\"), color= \"gray\") +\n  # geom line for weekly average score\n  geom_line(aes(y = weekly_average, linetype = \"dotted\"), color= \"black\") + \n  # geom line for your score\n  geom_line(aes(y = weekly_score, linetype = \"solid\")) + \n  # wrap by team\n  facet_wrap(.~ TeamName) +\n  # set labs\n  labs(\n    title = \"Weekly Average Score Compared to You and Your Opponent's Score\", \n    x = \"Week\", \n    y = \"Scores\",\n    caption = \"Data Source: ESPN Fantasy Website\",\n    subtitle = str_wrap(\"There is a diverse range of teams, including consistent ones, teams with a lot of boom \n                        potential, and teams with a lot of bust potential. Notable outliers are Team GM, who \n                        frequently scores high, and Team TP, who frequently scores low. Generally, teams tend to \n                        score close to the average points per week, with a few teams deviating from this trend each\n                        week.\", width = 90)) +\n  # set custom labels for linetype\n  scale_linetype_manual(values = c(\"dashed\", \"dotted\", \"solid\"), labels = c(\"Opponents Score\", \"Weekly Average\", \"Your Score\")) +\n  # set colors for teamnames\n  scale_colour_manual(values = paletteer_d(\"ggprism::colors\", 12)) +\n  # get only legend for linetype\n  guides(color = \"none\", linetype = guide_legend(title = \"Scores\")) +\n  # theme classe\n  theme_classic() +\n  # edit text and legend position\n  theme(axis.text.x = element_text(size = 12),\n  axis.text.y = element_text(size = 12),\n  plot.title = element_text(face= \"bold\", hjust = 0.5),\n  legend.position = c(.98, -.16), legend.justification = c(1, 0)) +\n  scale_x_continuous(breaks = c(2, 4, 6, 8, 10,12))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nWe see two teams, Team BD and JN, are both pretty \"average\" teams. However, what's interesting about that is they are currently at the top of the league in wins (Through Week 9) therefore implying consistency may be the best in winning fantasy football. Team RW has fairly low scoring weeks, besides their one breakout week 5 against Team TP. Interestingly, Team TP started off strong but had a tough middle of the season and unlucky past two weeks getting just barely beat by their opponent.\n\nA lot of these trends can be explained more by BYE weeks (weeks that a NFL team has off), injuries, or injuries that affect other players (for example, QB Matt Stafford was out Week 9 and so WR Puka Nacua didn't even score 5 points when he was projected 12). I think that is certainly the case for Team TP who has had a tough go at injuries this season. I personally have had a decent amount, like the number one overall pick Justin Jefferson being on IR and missing the past 4 weeks (note the drop in my score four weeks ago) ðŸ™ƒ.\n\nNext, I wanted to take a look at what position performs the best for each team and where the majority of their points are coming from. Take a look below!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Cumulative points over time and show distribution of each place\n\n# Define the desired order of the positions\nposition_order <- c(\"K\", \"D/ST\",\"TE\", \"FLEX\",\"WR\",\"RB\", \"QB\")\n\n# get data\ndata |> \n  # group by teamname and week\n  group_by(TeamName, PlayerRosterSlot) |> \n  # filter IR players out\n  filter(PlayerRosterSlot != \"IR\") |>\n  # gilter bench players out\n  filter(PlayerRosterSlot != \"Bench\") |>\n  # get sum of weekly score\n  summarise(total_score_per_position = sum(PlayerScoreActual))  |> \n  # factor rosterslot\n  mutate(PlayerRosterSlot = factor(PlayerRosterSlot, levels = position_order)) |> \n  # plot in ggplot\n  ggplot(aes(x = TeamName, y = total_score_per_position, fill = PlayerRosterSlot)) +    \n  # geom bar of all positions\n  geom_bar(position=\"dodge\", stat=\"identity\") +\n    # change colors and add percent to y axis\n    # scale_colour_manual(values = paletteer_d(\"ggprism::colors\", 12)) +\n  # labels\n  labs(\n      x = \"Team Name\",\n      y = \"Total Scores (Through Week 13)\",\n      fill = \"Positions\",\n      title = \"Total Score of Each Position For All Teams\",\n      caption = \"Data Source: ESPN Fantasy Website\",\n      subtitle = str_wrap(\"Wide receivers (WR) and running backs (RB) consistently dominate in point scoring for each\n                          team, with the quarterback (QB) following closely behind. The FLEX position seems variable\n                          among teams which makes sense as it allows any positional player to be utilized, which is why\n                          most people have either an RB or WR in that spot. Notably, positions such as kicker (K),\n                          defense/special teams (D/ST), and tight end (TE) exhibit relatively consistent performance\n                          across all teams.\", width = 87)) +\n  # change theme to linedraw\n  theme_linedraw() + \n  # edit text\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), \n    text = element_text(size = 12),\n    plot.title = element_text(face = \"bold\", hjust = 0.5)) +\n  # add colors to each position\n  scale_fill_manual(values = paletteer_d(\"NatParksPalettes::GrandCanyon\", 7))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nUnsurprisingly, RBs and WRs are the most valuable position as they score more than any other position. However, it is worth noting that there are two RB/WR slots in your lineup and only one of every other position. So, if we double a lot of team's QB points one could argue they are the most valuable and score the most points. To me, it seems like positions other than RB, WR, or QB are all relatively similar throughout teams, with only a small variation. If you begin to add more context to this plot, like the fact that Team WN had Travis Kelce (who is easily the best TE and scores a lot more points than other TEs) for the past 8 weeks you see he has a much higher TE total. This is certainly an advantage, however Team WN did use their first round pick on Travis (yes, this is the guy currently dating Taylor Swift).\n\n::: column-margin\nI usually never draft a QB high, with my theory being in a 10 man league there are typically enough \"average\" QBs to be fine. This year, I decided to draft Joe Burrow much earlier than I usually do and it has come back to bite me in the butt because he has been pitiful. So, lesson learned and I will not be drafting QBs early anymore.\n\n![[Joe Burrow](https://www.nfl.com/players/joe-burrow/stats/career)](joe.png){width=\"200\" style=\"text-align: center;\"}\n:::\n\nI added this plot later in the analysis because I found it pretty interesting. Take a look below!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# boxplot of scores for my team\n\ndata |> \n  # remove players\n  filter(!PlayerRosterSlot %in% c(\"Bench\", \"IR\")) |> \n  # groupby team\n  group_by(TeamName) |> \n  # init plot\n  ggplot(aes(x = TeamName, y = PlayerScoreActual, fill = TeamName)) +\n  # geom violin\n  geom_violin() +\n  geom_boxplot(width=.1, color=\"white\",outlier.shape = NA) +\n   # add colors\n  scale_fill_manual(values = paletteer_d(\"ggprism::colors\", 12)) +\n  # change to linedraw\n  theme_linedraw() + \n  # add theme\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), \n    text = element_text(size = 12),\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 11)) +\n  # add labels\n  labs(\n    x = \"Team Name\",\n    y = \"Player's Scores (All Weeks)\",\n    title = \"Distribution of Player Scores for Each Team (Through Week 9)\",\n    fill = \"Team Name\",\n    caption = \"Data Source: ESPN Fantasy Website\",\n    subtitle = str_wrap(\"The violin plots display the distribution of all player scores for each team. The boxplots \n    within expresses the median, interquartile range, and estimated min/max based on the interquartile range. \n    Notably, Team DH and Team RW have had the best weeks by a player so far this season, while Team WR has had the \n    worst scores. Most teams exhibit a similar median score, however, Team GM stands out with a noticeably higher\n    median comparatively.\", width = 90)) +\n  # get rid of legend\n  guides(fill = \"none\", color = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nWe see Team DH and Team RW have had some of the best weeks by a single player so far this season. Since we have such a tight leader board so far, meaning everyone has a fairly similar record, it makes sense that the median of each team is fairly similar. Also, we see some teams like Team WN has less variation within their player scores compared to Team GM and others with a large variation.I'm looking forward to seeing this distribution at the end of the season! Also I should note, this plot is excluding bench players.\n\nFinally, this last graph was made solely for my friends and I so that we can laugh at the thought of who is getting wrecked this year in fantasy. Take a look below for more details ðŸ˜„\n\n::: callout-warning\nTeam TP, you might want to look away for for this one...\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# graph for worst loss differential\n\n# grab difference of scores\nmatchups_diff = matchups |> \n  # find difference of scores\n    mutate(Difference = Score1 - Score2)\n\n# get team with lower score\nmatchups_diff$LowerScoreName = ifelse(matchups_diff$Difference < 0, matchups_diff$Name1, matchups_diff$Name2)\n\n# get abs of difference and plot\nmatchups_diff |> \n  # absolute the difference \n  mutate(Difference = abs(Difference)) |> \n  # group by team\n  group_by(LowerScoreName) |> \n  # get sum of differences for each team\n  summarise(sum_diff = sum(Difference)) |> \n  # init plot\n  ggplot(aes(x = LowerScoreName, y = sum_diff, fill = LowerScoreName)) +\n  # geom bar for each team\n  geom_col(position = \"dodge\") +\n  # add colors\n  scale_fill_manual(values = paletteer_d(\"ggprism::colors\", 12)) +\n  # change to linedraw\n  theme_linedraw() + \n  # add theme\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), \n    text = element_text(size = 12),\n    plot.title = element_text(face = \"bold\", hjust = 0.5)) +\n  # add labels\n  labs(\n    x = \"Team Name\",\n    y = \"Total Loss Differential\",\n    title = \"Total Loss Differential For Each Team (Through Week 13)\",\n    fill = \"Team Name\",\n    caption = \"Data Source: ESPN Fantasy Website\",\n    subtitle = str_wrap(\"It appears that there are four distinct tiers of total loss differential observed thus far in the\n                         season. Noteworthy outliers include Team BD, whose minimal loss differential suggests consistent\n                        performance despite losing games, and Team TP, who consistently experiences significant deficits\n                        in each loss they have.\", width = 85)) +\n  # get rid of legend\n  guides(fill = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nThis plot is expressing the worst Loss Differential... so sorry Team TP ðŸ˜… It's not looking good for you! One thing to note is this is not counting how much you win, it is solely taking the weeks you lose and finding the differential between you and your opponent's team score.\n\n## Final Thoughts\n\nUltimately, I had a really fun time doing this analysis and writing this blog! Looking forward to updating the results as the weeks go on, and to see who will be my league's crowned chamption this year ðŸ¥³\n\nTo summarize a bit of what my analysis consisted of - I analyzed data from my 2023 Fantasy Football League. I found interesting trends in the weekly match-ups, such as typically when a team over-performs they will get the W (but not always) or some teams went through a rough stretch of weeks. I also showed how RBs and WRs are typically the positions that score the most points, with other positions being more team dependent (aka you have the one good TE in the league). Our league is pretty tight this year in terms of rankings, so it was hard to see that a certain trend in the data leads you to be the best team. However, I think as the weeks go on that will certainly become more clear. My goal is to do more of a statistical analysis when the season is complete in order to step up my game for next year's fantasy football season! ðŸ˜„\n\n## Functions Used\n\n<!-- At the end of the data analysis, list out each of the functions you used from each of the packages (dplyr, tidyr, and ggplot2) to help the TA with respect to making sure you met all the requirements described above. -->\n\ndplyr/tidyr:\n\n1.  filter: filter rows based on conditions\n2.  select: select specific columns\n3.  summarise: calculate summary statistics\n4.  mutate: create or modify a column\n5.  group_by: group data based on variables\n6.  inner_join: merge two datasets on key values\n\nggplot2:\n\n1.  geom_line: line plot\n2.  geom_point: points on line plot\n3.  geom_bar: bar plot\n4.  geom_col: column plot\n5.  geom_violin: violin plot\n6.  geom_boxplot: boxplot within violin plot\n\n## References\n\n::: {#refs}\n:::\n\n<!-- Extra plots not used -->\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}